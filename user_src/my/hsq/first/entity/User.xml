<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="my.hsq.first.interf.IUserOperation">
	<resultMap type="User" id="userList">
		<result column="id" property="id" />
		<result column="username" property="username" />
		<result column="userage" property="userage" />
		<result column="useraddress" property="useraddress" />
	</resultMap>

	<select id="selectUserById" resultType="User" parameterType="int">
		select * from user where id = #{id}
	</select>

	<select id="selectUsersLikeName" resultMap="userList"
		parameterType="String">
		select * from user where username like #{username}
	</select>

	<!--执行增加操作的SQL语句。id和parameterType 分别与IUserOperation接口中的addUser方法的名字和 参数类型一致。以#{name}的形式引用Student参数 
		的name属性，MyBatis将使用反射读取Student参数 的此属性。#{name}中name大小写敏感。引用其他 的gender等属性与此一致。seGeneratedKeys设置 
		为"true"表明要MyBatis获取由数据库自动生成的主 键；keyProperty="id"指定把获取到的主键值注入 到Student的id属性 -->
	<insert id="addUser" keyProperty="id" parameterType="User"
		useGeneratedKeys="true">
		insert into user(username,userage,useraddress)
		values(#{username},#{userage},#{useraddress})
	</insert>
	
	<update id="updateUser" parameterType="User">
	update user set username=#{username},userage=#{userage},useraddress=#{useraddress} where id = #{id}
	</update>
	
	<delete id="deleteUserById" parameterType="int">
	delete from user where id = #{id}
	</delete>
</mapper>